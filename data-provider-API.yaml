openapi: 3.0.0
info:
  title: DebiAI data provider API
  version: "0.22.0"
  description: >-
    This API describe what the endpoints a service that want to be a DebiAI data
    provider need to have
  contact:
    name: DebiAI Team
    email: debiai@irt-systemx.fr
servers:
  - url: "http://localhost:3000"
tags:
  - name: Info
  - name: Projects
  - name: Data
  - name: Models
  - name: Selections
paths:
  ######  ---------------------- INFO ---------------------- ######
  /debiai/info:
    get:
      x-eov-operation-id: info
      x-eov-operation-handler: info.js
      description: Get some general informations about how DebiAI can use this service
      tags:
        - Info
      responses:
        "200":
          description: Success, Return informations about data Provider requests limits
          content:
            application/json:
              schema:
                type: object
                description: Informations to deal with data provider data requests
                properties:
                  version:
                    type: string
                    description: The version of the data provider
                    example: "0.20.0"
                  maxSampleIdByRequest:
                    type: integer
                    description: Optional number of samples id that can be provided by the project for display purpose
                    default: 10000
                  maxSampleDataByRequest:
                    type: integer
                    description: Optional number of samples data that can be provided by the project for display purpose
                    default: 2000
                  maxResultByRequest:
                    type: integer
                    description: Optional number of samples results that can be provided by the project for display purpose
                    default: 5000
  ######  ---------------------- PROJECTS ---------------------- ######
  /debiai/projects:
    get:
      x-eov-operation-id: getProjectsOverview
      x-eov-operation-handler: projects.js
      description: Get some general informations about project accessible from this data provider
      tags:
        - Projects
      responses:
        "200":
          description: Projets informations
          content:
            application/json:
              schema:
                type: object
                description: Project that can be selected by a DebiAI User, each key is a project ID
                additionalProperties:
                  type: object
                  description: A project overview
                  properties:
                    name:
                      type: string
                      description: Project name, the project ID by default
                      minLength: 1
                      maxLength: 30
                    nbSamples:
                      type: integer
                      description: Optional number of samples that can be provided by the project for display purpose
                      default: null
                    nbModels:
                      type: integer
                      description: Optional number of models that can be provided by the project for display purpose
                      default: null
                    nbSelections:
                      type: integer
                      description: Optional number of selections that can be provided by the project for display purpose
                      default: null
  /debiai/projects/{projectId}:
    parameters:
      - in: path
        schema:
          type: string
          minLength: 1
          example: Project 1
        name: projectId
        description: Project To research
        required: true
    get:
      x-eov-operation-id: getProject
      x-eov-operation-handler: projects.js
      description: Get Informations about project
      tags:
        - Projects
      responses:
        "200":
          description: Projets informations
          content:
            application/json:
              schema:
                type: object
                description: Structural informations about a project like the columns and the expected results
                properties:
                  name:
                    type: string
                    description: Project name, the project ID by default
                    nullable: true
                  columns:
                    type: array
                    description: Columns that DebiAI will be expecting for the project data
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                          example: Image name
                        category:
                          type: string
                          description: >-
                            Category of the column that will be used to select
                            the column more easely
                          default: other
                          enum:
                            - other
                            - context
                            - input
                            - groundtruth
                          minLength: 1
                          example: Groundthruth
                        type:
                          type: string
                          enum:
                            - auto
                            - text
                            - number
                            - boolean
                          default: auto
                          description: >-
                            The type of the column values, it will be guessed by
                            default by DebiAI, but it can be forced. Forcing a
                            type can be useful if we want to consider numbers
                            like 10, 100, 1000 as categories.
                      required:
                        - name
                  expectedResults:
                    type: array
                    description: Columns that DebiAI will be expecting for the project model results
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                          example: Model prediction
                        type:
                          type: string
                          enum:
                            - auto
                            - text
                            - number
                            - boolean
                          default: auto
                      required:
                        - name
                  nbSamples:
                    type: integer
                    description: Optional number of samples that can be provided by the project for display purpose
                    default: null
    delete:
      x-eov-operation-id: deleteProject
      x-eov-operation-handler: projects.js
      description: Delete a project
      tags:
        - Projects
      responses:
        "200":
          description: Project deleted
  /debiai/projects/{projectId}/data-id-list:
    parameters:
      - in: path
        schema:
          type: string
          minLength: 1
          example: Project 1
        name: projectId
        description: Project id to get the data ID list
        required: true
      - in: query
        schema:
          type: integer
        name: from
        description: Starting point to fetch data Ids
        required: false
      - in: query
        schema:
          type: integer
        name: to
        description: Ending point to fetch data Ids
        required: false
      - in: query
        schema:
          type: string
        name: analysisId
        description: Analysis ID unique identifier, it will be the same for all requests of an analysis
        required: false
      - in: query
        schema:
          type: boolean
        name: analysisStart
        description: True if it's the first request of an analysis
        required: false
      - in: query
        schema:
          type: boolean
        name: analysisEnd
        description: True if it's the last request of an analysis
        required: false
    get:
      x-eov-operation-id: dataIdList
      x-eov-operation-handler: projects.js
      description: >-
        Get a ID list of all available data in the project, this endpoint need to
        work with the project list provided in the info endoint

        A those ID will be used by DebiAI to request data or results later
      tags:
        - Data
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number

                description: "The project full list of data ID, each ID must be unique  "
              examples:
                example:
                  value:
                    - MyDataId_1
                    - MyDataId_2
                    - ...
  /debiai/projects/{projectId}/data:
    parameters:
      - schema:
          type: string
          minLength: 1
          example: Project 1
        name: projectId
        in: path
        description: project id to get the data ID list
        required: true
      - in: query
        schema:
          type: string
        name: analysisId
        description: Analysis ID unique identifier, it will be the same for all requests of an analysis
        required: false
      - in: query
        schema:
          type: boolean
        name: analysisStart
        description: True if it's the first request of an analysis
        required: false
      - in: query
        schema:
          type: boolean
        name: analysisEnd
        description: True if it's the last request of an analysis
        required: false
    post:
      x-eov-operation-id: data
      x-eov-operation-handler: projects.js
      description: >-
        Get the data to be displayed into DebiAI from the given data ID list,
        the requested IDs will be those given by the endpoint dataIdList. The
        number of data asked won't exceed the "dataUploadPatchSize" if it was
        specified in the debiai/info endpoint
      tags:
        - Data
      responses:
        "200":
          description: |
            The project data for each requested id.
          content:
            application/json:
              schema:
                type: object
                description: Each key of the object is a dataId
                additionalProperties:
                  type: array
                  description: >-
                    The number or items in the array need to be equal to
                    the number of column provided with the info path. Each n value will be mapped to
                    the n'th column.

                    Null values aren't allowed at the moment
                  items:
                    anyOf:
                      - type: string
                      - type: number
                      - type: integer
                      - type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: List of requested dataId
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: integer
  ######  ---------------------- MODELS ---------------------- ######
  /debiai/projects/{projectId}/models:
    parameters:
      - schema:
          type: string
          minLength: 1
          example: Project 1
        name: projectId
        in: path
        description: project id to get the model list
        required: true
    get:
      x-eov-operation-id: modelList
      x-eov-operation-handler: models.js
      description: Tell DebiAI which models are available for the given project
      tags:
        - Models
      responses:
        "200":
          description: A model list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      description: Model ID
                    name:
                      type: string
                      description: Model name, the model ID by default
                    nbResults:
                      type: number
                      description: Number of results that the model can provide
                      default: 0
  /debiai/projects/{projectId}/models/{modelId}/evaluated-data-id-list:
    parameters:
      - schema:
          type: string
          minLength: 1
          example: Project 1
        name: projectId
        in: path
        description: project id to get the data ID list
        required: true
      - schema:
          type: string
          minLength: 1
          example: Model 1
        name: modelId
        in: path
        description: Model id to get the data ID list
        required: true
    get:
      x-eov-operation-id: modelEvaluatedDataIdList
      x-eov-operation-handler: models.js
      description: Tell DebiAI which models are available for the given project
      tags:
        - Models
      responses:
        "200":
          description: The model data id list that the model has been evaluated on
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
                    - type: integer
  /debiai/projects/{projectId}/models/{modelId}/results:
    parameters:
      - schema:
          type: string
          minLength: 1
          example: Project 1
        name: projectId
        in: path
        description: project name to get the data ID list
        required: true
      - schema:
          type: string
          minLength: 1
          example: Model 1
        name: modelId
        in: path
        description: Model id to get the data ID list
        required: true
    post:
      x-eov-operation-id: modelResults
      x-eov-operation-handler: models.js
      description: Gives the results of a model from a given data ID list
      tags:
        - Models
      responses:
        "200":
          description: The model results for each requested data ID
          content:
            application/json:
              schema:
                type: object
                description: Each key of the object is a dataId
                additionalProperties:
                  type: array
                  description: >-
                    The number or items in the array need to be equal to
                    the number of expected model results provided with the info path.
                    Each n value will be mapped to the n'th column.

                    Null values aren't allowed at the moment
                  items:
                    anyOf:
                      - type: string
                      - type: number
                      - type: integer
                      - type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: List of requested dataId
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: integer
  /debiai/projects/{projectId}/models/{modelId}:
    parameters:
      - schema:
          type: string
          minLength: 1
          example: Project 1
        name: projectId
        in: path
        description: project name to get the data ID list
        required: true
      - schema:
          type: string
          minLength: 1
          example: Model 1
        name: modelId
        in: path
        description: Model id to get the data ID list
        required: true
    delete:
      x-eov-operation-id: deleteModel
      x-eov-operation-handler: models.js
      description: Delete a model
      tags:
        - Models
      responses:
        "200":
          description: The model has been deleted
  ######  ---------------------- SELECTIONS ---------------------- ######
  /debiai/projects/{projectId}/selections:
    parameters:
      - schema:
          type: string
          minLength: 1
          example: Project 1
        name: projectId
        in: path
        description: project name to get the selection list
        required: true
    get:
      x-eov-operation-id: selectionList
      x-eov-operation-handler: selections.js
      description: Tell DebiAI which selections are available for the given project
      tags:
        - Selections
      responses:
        "200":
          description: A selection list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      description: Selection ID
                    name:
                      type: string
                      description: Selection name, the selection ID by default
                    nbSamples:
                      type: number
                      description: Number of samples in the selection
                      default: 0
    post:
      x-eov-operation-id: createSelection
      x-eov-operation-handler: selections.js
      description: Create a selection with id List send in body
      tags:
        - Selections
      responses:
        "204":
          description: "Selection created successfully"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                idList:
                  type: array
                  items:
                    type: string
              required:
                - name
                - idList
  /debiai/projects/{projectId}/selections/{selectionId}/selected-data-id-list:
    parameters:
      - schema:
          type: string
          minLength: 1
          example: Project 1
        name: projectId
        in: path
        description: project name to get the data ID list
        required: true
      - schema:
          type: string
          minLength: 1
          example: Selection 1
        name: selectionId
        in: path
        description: Selection id to get the selected data ID list from
        required: true
    get:
      x-eov-operation-id: selectionDataIdList
      x-eov-operation-handler: selections.js
      description: Tell DebiAI the samples selected by the a selection
      tags:
        - Selections
      responses:
        "200":
          description: The selection data id list
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
                    - type: integer
  /debiai/projects/{projectId}/selections/{selectionId}:
    parameters:
      - schema:
          type: string
          minLength: 1
          example: Project 1
        name: projectId
        in: path
        description: project name to get the selection to delete
        required: true
      - schema:
          type: string
          minLength: 1
          example: Selection 1
        name: selectionId
        in: path
        description: Selection id to be deleted
        required: true
    delete:
      x-eov-operation-id: deleteSelection
      x-eov-operation-handler: selections.js
      description: Delete a single selection
      tags:
        - Selections
      responses:
        "204":
          description: "Selection successfully deleted"
